// BANCOS DE QUEST√ïES (Estudante e Professor)
const questionsEstudante = [ { q: "Quanto √© 2^3 ?", options: ["6", "8", "9", "12"], correct: 1, pillar: "Algoritmos", pillarTip: "Execute a multiplica√ß√£o repetida: 2 √ó 2 √ó 2.", explanation: "2^3 significa 2 multiplicado por si mesmo 3 vezes: 2 √ó 2 √ó 2 = 8.", example: "2 √ó 2 = 4 ‚Üí 4 √ó 2 = 8 ‚áí resposta 8." }, { q: "Qual o pr√≥ximo n√∫mero da sequ√™ncia 1,2,3,4,... ?", options: ["5", "6", "7", "8"], correct: 0, pillar: "Reconhecimento de Padr√µes", pillarTip: "Observe o padr√£o (aumenta de 1 em 1).", explanation: "A sequ√™ncia aumenta de 1: 4 + 1 = 5.", example: "4 + 1 = 5." }, { q: "Qual √© 1/2 de 10?", options: ["2", "3", "5", "4"], correct: 2, pillar: "Abstra√ß√£o", pillarTip: "'Meio' significa dividir por 2; ignore detalhes irrelevantes.", explanation: "Metade de 10 √© 10 √∑ 2 = 5.", example: "10 √∑ 2 = 5." }, { q: "Se cada pacote tem 4 balas, quantas balas em 3 pacotes?", options: ["7", "10", "12", "9"], correct: 2, pillar: "Decomposi√ß√£o", pillarTip: "Quebre: 3 pacotes √ó 4 balas por pacote.", explanation: "3 √ó 4 = 12.", example: "3 √ó 4 = 12." }, { q: "Qual conjunto cont√©m apenas inteiros? {1/2,2,3} {1,-2,0} {œÄ,2,5} {‚àö2,3,4}", options: ["1", "2", "3", "4"], correct: 1, pillar: "Reconhecimento de Padr√µes", pillarTip: "Inteiros s√£o n√∫meros sem parte fracion√°ria.", explanation: "{1,-2,0} s√£o todos inteiros; outros t√™m fra√ß√µes/irracionais.", example: "Verificar: 1 inteiro, -2 inteiro, 0 inteiro." }, { q: "Quanto √© 3+4?", options: ["5", "6", "7", "8"], correct: 2, pillar: "Algoritmos", pillarTip: "Siga passos simples de soma.", explanation: "3 + 4 = 7.", example: "3 + 4 = 7." }, { q: "Qual √© 10 ‚àí 7?", options: ["1", "2", "3", "4"], correct: 2, pillar: "Algoritmos", pillarTip: "Subtraia seguindo a ordem correta.", explanation: "10 ‚àí 7 = 3.", example: "10 ‚àí 7 = 3." }, { q: "Complete: 5,10,15,... pr√≥ximo?", options: ["16", "17", "18", "20"], correct: 3, pillar: "Reconhecimento de Padr√µes", pillarTip: "A sequ√™ncia aumenta de 5 em 5.", explanation: "√öltimo 15 + 5 = 20.", example: "15 + 5 = 20." }, { q: "Qual fra√ß√£o representa metade?", options: ["1/2", "1/3", "1/4", "2/3"], correct: 0, pillar: "Abstra√ß√£o", pillarTip: "'Metade' √© 1/2, abstraia palavras para a opera√ß√£o.", explanation: "Metade = 1/2.", example: "Meio = 1/2." }, { q: "Se tenho 2 grupos de 3 ma√ß√£s, total?", options: ["5", "6", "7", "8"], correct: 1, pillar: "Decomposi√ß√£o", pillarTip: "Multiplique n√∫mero de grupos pelo n√∫mero por grupo.", explanation: "2 √ó 3 = 6.", example: "2 √ó 3 = 6." }, { q: "Qual n√∫mero √© par? 7, 12, 9, 15", options: ["7", "12", "9", "15"], correct: 1, pillar: "Reconhecimento de Padr√µes", pillarTip: "N√∫meros pares s√£o divis√≠veis por 2.", explanation: "12 √∑ 2 = 6 ‚Üí √© par.", example: "12 √© divis√≠vel por 2." }, { q: "Quanto √© 4 √ó 2?", options: ["6", "7", "8", "9"], correct: 2, pillar: "Algoritmos", pillarTip: "Multiplica√ß√£o direta.", explanation: "4 √ó 2 = 8.", example: "4 √ó 2 = 8." }, { q: "1 + 1 = ?", options: ["1", "2", "3", "4"], correct: 1, pillar: "Algoritmos", pillarTip: "Soma simples.", explanation: "1 + 1 = 2.", example: "1 + 1 = 2." }, { q: "Qual destes n√£o √© n√∫mero inteiro? 5, -3, 2.5, 0", options: ["5", "-3", "2.5", "0"], correct: 2, pillar: "Reconhecimento de Padr√µes", pillarTip: "Procure partes fracion√°rias.", explanation: "2.5 tem parte decimal ‚Üí n√£o √© inteiro.", example: "2.5 ‚â† inteiro." }, { q: "Se eu tenho 10 e dou 4, quanto sobra?", options: ["6", "5", "7", "4"], correct: 0, pillar: "Decomposi√ß√£o", pillarTip: "Subtra√ß√£o: 10 ‚àí 4.", explanation: "10 ‚àí 4 = 6.", example: "10 ‚àí 4 = 6." } ];
const questionsProfessor = [ { q: "Qual o resultado de 5^3?", options: ["15", "25", "125", "35"], correct: 2, pillar: "Algoritmos", pillarTip: "Eleve calculando: 5 √ó 5 √ó 5.", explanation: "5^3 = 5 √ó 5 √ó 5 = 125.", example: "5 √ó 5 = 25 ‚Üí 25 √ó 5 = 125." }, { q: "Resolva 2x + 3 = 7. x = ?", options: ["1", "2", "3", "4"], correct: 1, pillar: "Decomposi√ß√£o", pillarTip: "Isole a vari√°vel passo a passo.", explanation: "2x = 7 ‚àí 3 = 4 ‚Üí x = 4/2 = 2.", example: "2x + 3 = 7 ‚Üí 2x = 4 ‚Üí x = 2." }, { q: "Fatore: x^2 ‚àí 5x + 6 = ?", options: ["(x-2)(x-3)", "(x+2)(x+3)", "(x-1)(x-6)", "N√£o fator√°vel"], correct: 0, pillar: "Reconhecimento de Padr√µes", pillarTip: "Procure dois n√∫meros que multiplicam 6 e somam ‚àí5.", explanation: "‚àí2 e ‚àí3 multiplicam 6 e somam ‚àí5 ‚Üí (x‚àí2)(x‚àí3).", example: "x^2 ‚àí 5x + 6 = (x‚àí2)(x‚àí3)." }, { q: "Qual a m√©dia de 4,6,8?", options: ["5", "6", "7", "8"], correct: 2, pillar: "Abstra√ß√£o", pillarTip: "M√©dia = soma dos valores √∑ quantidade.", explanation: "(4+6+8)=18 ‚Üí 18 √∑ 3 = 6.", example: "(4 + 6 + 8) / 3 = 6." }, { q: "Resolva: 3 √ó (2 + 4) = ?", options: ["12", "18", "14", "15"], correct: 1, pillar: "Algoritmos", pillarTip: "Siga a ordem: par√™nteses primeiro.", explanation: "Aten√ß√£o: 2 + 4 = 6, ent√£o 3 √ó 6 = 18.", example: "3 √ó (2 + 4) = 3 √ó 6 = 18." }, { q: "Simplifique: 10/5 = ?", options: ["1", "2", "3", "4"], correct: 1, pillar: "Abstra√ß√£o", pillarTip: "Divis√£o simples, abstraia unidades.", explanation: "10 √∑ 5 = 2.", example: "10 √∑ 5 = 2." }, { q: "Resolva: x/4 = 3 ‚Üí x = ?", options: ["7", "12", "9", "10"], correct: 1, pillar: "Decomposi√ß√£o", pillarTip: "Multiplique ambos os lados por 4.", explanation: "x = 3 √ó 4 = 12.", example: "x/4 = 3 ‚Üí x = 3√ó4 = 12." }, { q: "Se f(x)=2x+1, f(3) = ?", options: ["5", "6", "7", "8"], correct: 2, pillar: "Algoritmos", pillarTip: "Substitua x por 3 e calcule.", explanation: "2√ó3 + 1 = 7.", example: "2√ó3 = 6 ‚Üí 6 + 1 = 7." }, { q: "O que √© um n√∫mero primo? 4,6,7,9 ‚Äî qual primo?", options: ["4", "6", "7", "9"], correct: 2, pillar: "Reconhecimento de Padr√µes", pillarTip: "Primos t√™m apenas divisores 1 e ele mesmo.", explanation: "7 s√≥ √© divis√≠vel por 1 e 7 ‚Üí primo.", example: "7 √∑ 2,3 n√£o inteiro ‚Üí primo." }, { q: "Calcule 7 √ó 8", options: ["48", "54", "56", "64"], correct: 2, pillar: "Algoritmos", pillarTip: "Multiplica√ß√£o direta.", explanation: "7 √ó 8 = 56.", example: "7 √ó 8 = 56." }, { q: "Resolva: 9 ‚àí (3 + 2) = ?", options: ["2", "3", "4", "5"], correct: 2, pillar: "Algoritmos", pillarTip: "Fa√ßa par√™nteses primeiro: 3 + 2 = 5, ent√£o 9 ‚àí 5 = 4.", explanation: "3 + 2 = 5 ‚Üí 9 ‚àí 5 = 4.", example: "9 ‚àí (3 + 2) = 9 - 5 = 4." }, { q: "Encontre x: 4x = 20 ‚Üí x = ?", options: ["4", "5", "6", "7"], correct: 1, pillar: "Decomposi√ß√£o", pillarTip: "Isole x dividindo ambos os lados por 4.", explanation: "x = 20 √∑ 4 = 5.", example: "4x = 20 ‚Üí x = 5." }, { q: "Qual resultado de 2^4 ?", options: ["8", "12", "16", "10"], correct: 2, pillar: "Algoritmos", pillarTip: "Multiplique 2 por si mesmo 4 vezes.", explanation: "2 √ó 2 √ó 2 √ó 2 = 16.", example: "2√ó2=4 ‚Üí 4√ó2=8 ‚Üí 8√ó2=16." }, { q: "Fatore: x^2 ‚àí 4 = ?", options: ["(x-2)(x+2)", "(x-4)(x+1)", "(x-1)(x-4)", "N√£o fator√°vel"], correct: 0, pillar: "Reconhecimento de Padr√µes", pillarTip: "Diferen√ßa de quadrados: a^2 ‚àí b^2 = (a‚àíb)(a+b).", explanation: "x^2 ‚àí 4 = x^2 ‚àí 2^2 = (x‚àí2)(x+2).", example: "x^2 ‚àí 4 = (x‚àí2)(x+2)." }, { q: "M√©dia ponderada simples: notas 7 (peso1) e 9 (peso1). M√©dia?", options: ["7", "8", "9", "16"], correct: 1, pillar: "Abstra√ß√£o", pillarTip: "Com pesos iguais, m√©dia √© (7+9)√∑2.", explanation: "(7 + 9) = 16 ‚Üí 16 √∑ 2 = 8.", example: "(7 + 9) / 2 = 8." } ];

// ESTADOS GLOBAIS DO JOGO
let currentQuestion = 0;
let score = 0;
let record = Number(localStorage.getItem("record")) || 0;
let maxFaseAlcancada = Number(localStorage.getItem("maxFase")) || 1;
let timeLeft = 120;
let fase = 1;
let heroHP = 100;
let enemyHP = 100;
let maxEnemyHP = 100;
let nivel = "estudante";
let timerInterval;
let waitingForExplanation = false;
let pendingNext = null;

// INICIALIZA√á√ÉO DO JOGO
document.addEventListener("DOMContentLoaded", () => {
    document.getElementById("record").textContent = record;
    verificarDesbloqueioProfessor(); // ALTERA√á√ÉO: Nome da fun√ß√£o atualizado
});

// NAVEGA√á√ÉO E CONTROLE DE TELAS
function voltarAoMenuPrincipal() {
    if (confirm("Tem certeza que quer sair? Todo o progresso desta partida ser√° perdido.")) {
        clearInterval(timerInterval);
        document.getElementById("game-container").style.display = "none";
        document.getElementById("initial-screen").style.display = "block";
        verificarDesbloqueioProfessor(); // ALTERA√á√ÉO: Nome da fun√ß√£o atualizado
        salvarRecorde();
    }
}

// L√ìGICA PRINCIPAL DO JOGO
function iniciarJogo(escolha) {
    if (escolha === "professor" && maxFaseAlcancada <= 15) {
        alert("üîí Modo Professor bloqueado ‚Äî complete 15 fases no modo Estudante primeiro.");
        return;
    }
    
    nivel = escolha;
    score = 0;
    currentQuestion = 0;
    timeLeft = 120;
    fase = 1;
    heroHP = 100;
    maxEnemyHP = 100;
    enemyHP = 100;
    
    document.getElementById("initial-screen").style.display = "none";
    document.getElementById("game-container").style.display = "block";
    
    document.getElementById("score").textContent = score;
    document.getElementById("fase").textContent = fase;
    document.getElementById("heroHealth").style.width = "100%";
    document.getElementById("enemyHealth").style.width = "100%";
    
    iniciarTimer();
    showQuestion();
}

function iniciarTimer() {
    clearInterval(timerInterval);
    document.getElementById("timer").textContent = timeLeft;
    timerInterval = setInterval(() => {
        timeLeft--;
        document.getElementById("timer").textContent = timeLeft;
        if (timeLeft <= 0) {
            clearInterval(timerInterval);
            alert("‚è≥ Tempo esgotado! Pontua√ß√£o: " + score);
            salvarRecorde();
            location.reload();
        }
    }, 1000);
}

function getBanco() {
    return (nivel === "professor") ? questionsProfessor : questionsEstudante;
}

function showQuestion() {
    if (waitingForExplanation) return;
    const banco = getBanco();
    const q = banco[currentQuestion % banco.length];
    document.getElementById("question").textContent = q.q;
    const optionsDiv = document.getElementById("options");
    optionsDiv.innerHTML = "";
    q.options.forEach((opt, i) => {
        const btn = document.createElement("button");
        btn.className = "option";
        btn.textContent = opt;
        btn.onclick = () => checkAnswer(i);
        optionsDiv.appendChild(btn);
    });
}

function disableOptions() { document.querySelectorAll(".option").forEach(b => b.disabled = true); }
function enableOptions() { document.querySelectorAll(".option").forEach(b => b.disabled = false); }

function checkAnswer(i) {
    disableOptions();
    const banco = getBanco();
    const q = banco[currentQuestion % banco.length];

    if (i === q.correct) {
        score += 100;
        enemyHP -= 30;
        const enemyHealthPercent = Math.max(0, (enemyHP / maxEnemyHP) * 100);
        document.getElementById("score").textContent = score;
        document.getElementById("enemyHealth").style.width = enemyHealthPercent + "%";
        if (enemyHP <= 0) {
            fase++;
            salvarProgressoFase();
            verificarDesbloqueioProfessor(); // ALTERA√á√ÉO: Nome da fun√ß√£o atualizado
            document.getElementById("fase").textContent = fase;
            alert("üéâ Voc√™ venceu a fase " + (fase - 1) + "!");
            maxEnemyHP = 100 + (fase - 1) * 20;
            enemyHP = maxEnemyHP;
            document.getElementById("enemyHealth").style.width = "100%";
        }
        currentQuestion++;
        setTimeout(() => { enableOptions(); showQuestion(); }, 300);
    } else {
        score = Math.max(0, score - 50);
        heroHP -= 20;
        document.getElementById("score").textContent = score;
        document.getElementById("heroHealth").style.width = Math.max(0, heroHP) + "%";
        if (heroHP <= 0) {
            alert("üíÄ Voc√™ foi derrotado! Pontua√ß√£o final: " + score);
            salvarRecorde();
            location.reload();
            return;
        }
        waitingForExplanation = true;
        pendingNext = function() {
            waitingForExplanation = false;
            pendingNext = null;
            currentQuestion++;
            enableOptions();
            showQuestion();
        };
        mostrarExplicacao(q, i);
    }
}

// PROGRESSO E DESBLOQUEIO
function salvarProgressoFase() {
    if (fase > maxFaseAlcancada) {
        maxFaseAlcancada = fase;
        localStorage.setItem("maxFase", maxFaseAlcancada);
    }
}

/**
 * ALTERA√á√ÉO: Esta fun√ß√£o agora controla APENAS o desbloqueio do Modo Professor.
 */
function verificarDesbloqueioProfessor() {
    const btnProfessor = document.getElementById("professorMenuBtn");
    const unlockMsg = document.getElementById("unlock-message");

    const desbloqueado = maxFaseAlcancada > 15;

    btnProfessor.disabled = !desbloqueado;
    
    if (desbloqueado) {
        btnProfessor.innerHTML = "Modo Professor";
        unlockMsg.textContent = "Parab√©ns! O Modo Professor foi desbloqueado.";
    } else {
        btnProfessor.innerHTML = "üîí Modo Professor";
        unlockMsg.textContent = `Complete ${16 - maxFaseAlcancada} fase(s) para desbloquear o Modo Professor. (Progresso: ${maxFaseAlcancada - 1}/15)`;
    }
}

function salvarRecorde() {
    if (score > record) {
        localStorage.setItem("record", score);
        record = score;
        document.getElementById("record").textContent = record;
        alert("üèÜ Novo recorde: " + score);
    }
}

// CONTROLES DOS MODAIS (Pop-ups)
function mostrarExplicacao(q, chosenIndex) {
    const modal = document.getElementById("explicacaoModal");
    const content = document.getElementById("explicacaoContent");
    const chosenText = q.options[chosenIndex] || "‚Äî";
    const correctText = q.options[q.correct];
    let html = `<span class="closeModal" onclick="fecharExplicacao()">X</span><h2>Resposta incorreta</h2><p>Voc√™ escolheu: <strong>${chosenText}</strong><br>Resposta correta: <strong>${correctText}</strong></p><h3>Por que errou?</h3><div>${q.explanation}</div><h3>Exemplo (passo a passo)</h3><pre>${q.example}</pre><p style="margin-top:10px"><strong>Pilar recomendado:</strong> ${q.pillar}</p><p style="font-size:13px;color:#555">Feche esta janela para continuar.</p>`;
    content.innerHTML = html;
    modal.style.display = "flex";
}

function fecharExplicacao() {
    document.getElementById("explicacaoModal").style.display = "none";
    if (typeof pendingNext === "function") {
        pendingNext();
    }
}

function abrirPilares() { document.getElementById("pilaresModal").style.display = "flex"; }
function fecharPilares() { document.getElementById("pilaresModal").style.display = "none"; }
function abrirObjetivo() { document.getElementById("objetivoModal").style.display = "flex"; }
function fecharObjetivo() { document.getElementById("objetivoModal").style.display = "none"; }